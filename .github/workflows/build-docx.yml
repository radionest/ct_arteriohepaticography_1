name: Build DOCX Document

on:
  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ push –≤ main –≤–µ—Ç–∫—É
  push:
    branches: [ main, master ]
    paths:
      - 'src/chapters/**'
      - 'src/bibliography/**'
      - 'build/bib_styles/**'
      - '.github/workflows/build-docx.yml'
  
  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ pull request
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/chapters/**'
      - 'src/bibliography/**'
      - 'build/bib_styles/**'
  
  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup pandoc
      uses: r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: '3.1.9' # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Build DOCX document
      run: |
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        SRC_DIR="src"
        BIB_FILE="${SRC_DIR}/bibliography/primary_1960_2025.json"
        OUTPUT_FILE="build/lung_cancer_screening.docx"
        
        # –°–ø–∏—Å–æ–∫ –≥–ª–∞–≤ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        CHAPTERS=(
          "${SRC_DIR}/chapters/00_intro.md"
          "${SRC_DIR}/chapters/01_xray.md"
          "${SRC_DIR}/chapters/01_0_xray_tech.md"
          "${SRC_DIR}/chapters/02_ct.md"
          "${SRC_DIR}/chapters/03_comparison.md"
        )
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≥–ª–∞–≤..."
        EXISTING_CHAPTERS=""
        for chapter in "${CHAPTERS[@]}"; do
          if [ -f "$chapter" ]; then
            echo "‚úì –ù–∞–π–¥–µ–Ω: $chapter"
            EXISTING_CHAPTERS="$EXISTING_CHAPTERS $chapter"
          else
            echo "‚úó –ù–µ –Ω–∞–π–¥–µ–Ω: $chapter"
          fi
        done
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏–∏
        if [ -f "$BIB_FILE" ]; then
          echo "‚úì –ë–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: $BIB_FILE"
        else
          echo "‚úó –ë–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $BIB_FILE"
          exit 1
        fi
        
        # –°–±–æ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        echo "–ó–∞–ø—É—Å–∫ pandoc –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞..."
        pandoc \
          --standalone \
          --toc \
          --toc-depth=3 \
          --citeproc \
          --number-sections \
          --bibliography="$BIB_FILE" \
          --csl=./build/bib_styles/gost-r-7-0-5-2008-numeric-iaa.csl \
          -o "$OUTPUT_FILE" \
          $EXISTING_CHAPTERS
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if [ -f "$OUTPUT_FILE" ]; then
          echo "‚úì –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: $OUTPUT_FILE"
          echo "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(ls -lh $OUTPUT_FILE | awk '{print $5}')"
        else
          echo "‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
          exit 1
        fi
    
    - name: Upload DOCX as artifact
      uses: actions/upload-artifact@v4
      with:
        name: lung-cancer-screening-docx
        path: build/lung_cancer_screening.docx
        retention-days: 30
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –ø—Ä–∏ push –≤ main
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main && github.event.head_commit.message == 'release'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Build ${{ github.run_number }}
        draft: false
        prerelease: false
        files: build/lung_cancer_screening.docx
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
  check-markdown:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Check markdown files
      run: |
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ markdown —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫ –≤ markdown
        for file in src/chapters/*.md; do
          if [ -f "$file" ]; then
            echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ $file..."
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ TODO –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            if grep -n "TODO:" "$file"; then
              echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã TODO –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ $file"
            fi
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—É—Å—Ç—ã—Ö —Å—Å—ã–ª–æ–∫
            if grep -E "\[@[^\]]*\]" "$file" | grep -v "\[@[a-zA-Z0-9_-]+\]"; then
              echo "‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å—Å—ã–ª–∫–∞–º–∏ –≤ $file"
            fi
          fi
        done
    
    - name: Count statistics
      run: |
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞:"
        echo "------------------------"
        
        # –ü–æ–¥—Å—á–µ—Ç —Å–ª–æ–≤ –≤ –≥–ª–∞–≤–∞—Ö
        total_words=0
        for file in src/chapters/*.md; do
          if [ -f "$file" ]; then
            words=$(wc -w < "$file")
            echo "$(basename $file): $words —Å–ª–æ–≤"
            total_words=$((total_words + words))
          fi
        done
        echo "------------------------"
        echo "–í—Å–µ–≥–æ —Å–ª–æ–≤: $total_words"
        
        # –ü–æ–¥—Å—á–µ—Ç —Å—Å—ã–ª–æ–∫ –Ω–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É
        total_refs=$(grep -ho "\[@[a-zA-Z0-9_-]*\]" src/chapters/*.md 2>/dev/null | sort -u | wc -l)
        echo "–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É: $total_refs"